name: CI Terraform
on:
  push:
    branches: [main]
    paths:
      - "infra/**"

permissions:
  contents: write
  id-token: write # Required for OIDC

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: eu-west-2

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0
          terraform_wrapper: false

      - name: Terraform Init
        working-directory: infra/terraform/environments/prod
        run: terraform init

      - name: Terraform Plan
        id: plan
        working-directory: infra/terraform/environments/prod
        run: |
          set +e
          terraform plan -var-file=prod.tfvars -detailed-exitcode
          CODE=$?
          set -e
          echo "exitcode=$CODE" >> $GITHUB_OUTPUT
      # Exit code 0 if no changes are required.
      # Exit code 2 if changes are found.
      # Only proceed if Terraform Plan indicates changes (exit code 2)
      - name: Terraform Apply
        if: steps.plan.outputs.exitcode == '2'
        working-directory: infra/terraform/environments/prod
        run: terraform apply -var-file=prod.tfvars -auto-approve

      - name: Terraform Output
        if: steps.plan.outputs.exitcode == '2'
        working-directory: infra/terraform/environments/prod
        run: terraform output -json > tf_output.json

      - name: Extract IAM Role ARN
        if: steps.plan.outputs.exitcode == '2'
        working-directory: infra/terraform/environments/prod
        run: |
          ROLE_ARN=$(jq '.iam_secrets_role_arn.value' tf_output.json)
          echo "ROLE_ARN=$ROLE_ARN" >> $GITHUB_ENV

      - name: Install yq
        if: steps.plan.outputs.exitcode == '2'
        run: |
          YQ_VERSION="v4.35.1" 
          curl -L "https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64" -o yq
          chmod +x yq
          sudo mv yq /usr/local/bin/yq

      - name: Compare ARNs and Conditionally Update Values.yaml
        if: steps.plan.outputs.exitcode == '2'
        id: compareARNs
        run: |
          CURRENT_ARN=$(yq '.serviceAccount.annotations."eks.amazonaws.com/role-arn"' infra/helm/web-app/environments/prod/values.yaml)
          CURRENT_ARN="\"$CURRENT_ARN\"" # Add quotes to match jq output
          if [ "$CURRENT_ARN" = "$ROLE_ARN" ]; then
            echo "No ARN changes detected."
            echo "arn_changes=false" >> $GITHUB_OUTPUT
          else
            echo "ARN changed. Updating values.yaml."
            yq -i '.serviceAccount.annotations."eks.amazonaws.com/role-arn" = env(ROLE_ARN)' infra/helm/web-app/environments/prod/values.yaml
            echo "arn_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: steps.plan.outputs.exitcode == '2'
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add infra/helm/web-app/environments/prod/values.yaml
          git commit -m "Detected change in infra. Update IAM Role ARN in values.yaml"
          git push
