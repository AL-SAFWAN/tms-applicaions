services:
  db:
    image: postgres:12
    restart: "no"
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
    ports:
      - "5432:5432" # Expose for direct access in local dev

  adminer:
    image: adminer
    restart: "no"
    networks:
      - default
    depends_on:
      - db
    environment:
      - ADMINER_DESIGN=pepa-linha-dark
    ports:
      - "8080:8080" # Access via http://localhost:8080 for database management

  prestart:
    image: "backend"
    build:
      context: ./backend
    networks:
      - default
    depends_on:
      db:
        condition: service_healthy
        restart: true
    command: bash scripts/prestart.sh
    env_file:
      - .env
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=app
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=changethis
    volumes:
      - ./backend/app/alembic:/app/app/alembic

  backend:
    image: "backend"
    restart: "no"
    networks:
      - default
    depends_on:
      db:
        condition: service_healthy
        restart: true
      prestart:
        condition: service_completed_successfully
    env_file:
      - .env
    build:
      context: ./backend
      dockerfile: Dockerfile # Specify the development Dockerfile
    command:
      - fastapi
      - run
      - --reload
      - "app/main.py"
    develop:
      watch:
        - path: ./backend
          action: sync
          target: /app
          ignore:
            - ./backend/.venv
            - .venv
        - path: ./backend/pyproject.toml
          action: rebuild
    ports:
      - "8000:8000" # Access FastAPI at http://localhost:8000
    volumes:
      - ./backend/app/alembic:/app/app/alembic

  frontend:
    restart: "no"
    networks:
      - default
    build:
      context: ./frontend
      dockerfile: Dockerfile # Specify the development Dockerfile
      args:
        - NEXT_PUBLIC_BACKEND_URL = http://localhost:8000
        - NODE_ENV=production
    ports:
      - "5173:3000"
  mailcatcher:
    image: schickling/mailcatcher
    ports:
      - "1080:1080"
      - "1025:1025"
volumes:
  app-db-data:
